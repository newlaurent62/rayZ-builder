#!/bin/bash
#
# alt-config-session
#
# (c) 2020 Laurent Schwartz, license GPLv3
#

function sigterm() {
  trap '' TERM
  if [ "$PID" != "" ]; then
    echo "Propagate TERM to $PID ..."
    kill -TERM "$PID"
    wait $PID
  fi
}

function sigint() {
  
  if [ "$PID" != "" ]; then
    echo "Propagate INT to $PID ..."
    kill -INT "$PID"
  fi
  
}

function sigusr1() {
  
  if [ "$PID" != "" ]; then
    echo "Propagate USR1 to $PID ..."
    kill -USR1 "$PID"
  fi
  
}

function sigusr2() {
  
  if [ "$PID" != "" ]; then
    echo "Propagate USR2 to $PID ..."
    kill -USR2 "$PID"
  fi
  
}


function sighup() {
  
  if [ "$PID" != "" ]; then
    echo "Propagate HUP to $PID ..."
    kill -HUP "$PID"
  fi
  
}

trap sigterm TERM

trap sigint INT

trap sigusr1 USR1

trap sigusr2 USR2

trap sighup HUP


function stopclient() {
  if [ -d '/tmp/catia' ]; then
    if [ "$RAY_SESSION_NAME" != "" -a "$NSM_CLIENT_ID" != "" ]; then
      echo "0" > "/tmp/catia/${RAY_SESSION_NAME}.${NSM_CLIENT_ID}.pid"
    fi
  fi
}

function error() {
  
  echo -e "\e[1m\e[31man error occured !\e[0m"
  sigterm
  stopclient
  exit 1
}

function init_catia_if_needed() {

if [ -f "$RAY_SESSION_PATH/ray-scripts/.env" ]; then
  source "$RAY_SESSION_PATH/ray-scripts/.env"
  if [ $USE_CATIA -eq 1 ]; then
    mkdir -p /tmp/catia/
  fi
fi
}

function help() {
  echo "Usage: "
  echo "  ray-config-session [ (-x|--xdg-config-home) RELATIVE_PATH ] -- EXECUTABLE_ARGS"
  echo ""
  echo " Example:"
  echo "  ray-config-session -x ~/.config2 -- mumble -m"
}

if [ "$RAY_SESSION_PATH" == "" ]
then
  RAY_SESSION_PATH="$(ray_control get_session_path)"
  if [ $? -ne 0 ]
  then
    echo -e "\e[1m\e[31mcould not get ray_session_path ! Is there a raysession document opened ?\e[0m"
    stopclient  
    exit 1
  fi
fi

EXEC=0
while (( "$#" )); do
  case "$1" in
    -x|--xdg-config-home)
      echo "arg xdg-config-home=$2"
      CONFIG_HOME="$2"
      shift 2
      ;;
    -e|--exec)
      echo "arg exec"
      EXEC=1
      shift
      ;;
    -h|--help)
      echo 
      help
      exit 0
      ;;
    --) # end argument parsing
      shift
      break
      ;;
    -*|--*=) # unsupported flags
      echo "error: unknown option '$1'"
      exit 1
      ;;
  esac
done

argc=$#

cmd=("$@")
for (( j=0; j<argc; j++ )); do
    cmd[$j]="${cmd[$j]}" 
done

COMMAND="${cmd[0]}"
if [ "$NSM_CLIENT_ID" == "" ]
then
  echo -e "\e[1m\e[31mThe NSM_CLIENT_ID is not set ... Cannot run the program !\e[0m"
  error
fi
RAY_SESSION_NAME="$(basename "$RAY_SESSION_PATH")"

export XDG_CONFIG_HOME="$RAY_SESSION_PATH/$RAY_SESSION_NAME.$NSM_CLIENT_ID/$CONFIG_HOME"

USE_CATIA=0
init_catia_if_needed

echo "- PATH: $PATH"
echo "- XDG_CONFIG_HOME resolved to: $XDG_CONFIG_HOME"
echo "- NSM_CLIENT_ID: $NSM_CLIENT_ID"
echo "- RAY_SESSION_NAME: $RAY_SESSION_NAME"
echo "- RAY_CONTROL_PORT: $RAY_CONTROL_PORT"
cd "$RAY_SESSION_PATH/$RAY_SESSION_NAME.$NSM_CLIENT_ID" || error
echo "- PWD: $(pwd)"
echo "- USE_CATIA: $USE_CATIA"
echo "- EXEC: $EXEC"
echo "- Executing: '${cmd[@]}'"
echo "- Command(which $COMMAND): '$(which "$COMMAND")'"
if [ "$(which "$COMMAND")" == "" ]
then
  echo -e "\e[1m\e[31mCommand '$COMMAND' not found on this system !\e[0m"
  error
fi
# if [ $USE_CATIA -eq 1 ]; then
#   echo "0" > "/tmp/catia/${RAY_SESSION_NAME}.${NSM_CLIENT_ID}.pid" || error
# fi
echo "Starting command ..."

if [ $EXEC -eq 0 ]; then
  ${cmd[@]} &
else
  exec "${cmd[@]}"
fi

PID=$!
# if [ $USE_CATIA -eq 1 ]; then
#   echo "$PID" > "/tmp/catia/${RAY_SESSION_NAME}.${NSM_CLIENT_ID}.pid" || error
# fi
sleep 2
WINID="$(getwindidbypid $PID)"
echo "window id: $WINID of PID: $PID"
wait $PID
stopclient
