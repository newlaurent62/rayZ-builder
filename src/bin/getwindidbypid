#!/usr/bin/env bash
# getwindidbypid
# 
# Get the ID of a window by PID (if the process has a window).
# 
# Usage:
#   getwindidbypid --single|--many|--manytitles <PID> <TITLE-REGEXP>
# 

type="--single"
case "$1" in
  --single)
    type="--single"
    shift
    ;;
  --many)
    type="--many"
    shift
    ;;
  --many-titles)
    type="--many-titles"
    shift
    ;;
  --single-title)
    type="--single-title"
    shift
    ;;
  *)
    ;;
esac
WMCTRL=""
if [ "$2" != "" ]; then
  WMCTRL="$(wmctrl -lp | grep -E "$2")"
else
  WMCTRL="$(wmctrl -lp)"
fi

while IFS= read line; do
  if [[ "${line}" =~ (0x)([0-9a-z]+)([ ][- ][0-9]+[ ])([0-9]*) ]]; then
    winId="${BASH_REMATCH[1]}${BASH_REMATCH[2]}"
    pid="${BASH_REMATCH[4]}"
    if [ "$1" == "" ]; then
      WIND_IDS+=("${winId}")
      WIND_LINES+=("$line\n")
    else
      if [[ "${pid}" -eq "${1}" ]]; then
        WIND_IDS+=("${winId}")
        WIND_LINES+=("$line\n")
      fi
    fi
  fi
done < <(echo "$WMCTRL")

case "$type" in
  --single)
    if [ "${#WIND_IDS[@]}" -gt 0 ]; then
      echo "${WIND_IDS[0]}"
    else
      echo "None"
    fi
    ;;
  --many)
    if [ "${#WIND_IDS[@]}" -gt 0 ]; then
      echo "${WIND_IDS[@]}"
    else
      echo "None"
    fi
    ;;
  --single-title)
    if [ "${#WIND_LINES[@]}" -gt 0 ]; then
      echo -e " ${WIND_LINES[0]}"
    else
      echo "None"
    fi
    ;;
  --many-titles)
    if [ "${#WIND_LINES[@]}" -gt 0 ]; then
      echo -e " ${WIND_LINES[@]}"
    else
      echo "None"
    fi
    ;;
  *)
    ;;
esac
